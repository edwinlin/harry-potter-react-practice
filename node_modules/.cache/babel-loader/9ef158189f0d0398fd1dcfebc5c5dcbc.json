{"ast":null,"code":"import _toConsumableArray from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CharacterList from './components/CharacterList';\nimport TeamList from './components/TeamList';\nimport Nav from './components/Nav';\nimport { getGryffindor } from './endpoints';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allStudents: [],\n      teamStudents: []\n    };\n\n    _this.handleAllStudentsClick = function (studentInfo) {\n      var updatedStudents = _toConsumableArray(_this.state.allStudents).filter(function (student) {\n        return student._id !== studentInfo._id;\n      });\n\n      _this.setState({\n        allStudents: updatedStudents,\n        teamStudents: [studentInfo].concat(_toConsumableArray(_this.state.teamStudents))\n      });\n    };\n\n    _this.handleTeamStudentsClick = function (studentInfo) {\n      console.log(studentInfo);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(getGryffindor).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        return _this2.setState({\n          allStudents: json[0].members\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"character-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(CharacterList, {\n        handleToggle: this.handleAllStudentsClick,\n        allStudents: this.state.allStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(TeamList, {\n        handleToggle: this.handleTeamStudentsClick,\n        teamStudents: this.state.teamStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/edwinlin/Development/Lectures/Discussion/harry-potter-react-practice/src/App.js"],"names":["React","Component","CharacterList","TeamList","Nav","getGryffindor","App","state","allStudents","teamStudents","handleAllStudentsClick","studentInfo","updatedStudents","filter","student","_id","setState","handleTeamStudentsClick","console","log","fetch","then","resp","json","members"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,aAAR,QAA4B,aAA5B;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,WAAW,EAAC,EADR;AAEJC,MAAAA,YAAY,EAAC;AAFT,K;;UAUNC,sB,GAAuB,UAACC,WAAD,EAAe;AACpC,UAAMC,eAAe,GAAG,mBAAI,MAAKL,KAAL,CAAWC,WAAf,EAA4BK,MAA5B,CAAmC,UAAAC,OAAO;AAAA,eAAGA,OAAO,CAACC,GAAR,KAAgBJ,WAAW,CAACI,GAA/B;AAAA,OAA1C,CAAxB;;AACA,YAAKC,QAAL,CAAc;AACZR,QAAAA,WAAW,EAACI,eADA;AAEZH,QAAAA,YAAY,GAAEE,WAAF,4BAAkB,MAAKJ,KAAL,CAAWE,YAA7B;AAFA,OAAd;AAID,K;;UAEDQ,uB,GAAwB,UAACN,WAAD,EAAe;AACrCO,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACD,K;;;;;;;wCAfkB;AAAA;;AACjBS,MAAAA,KAAK,CAACf,aAAD,CAAL,CAAqBgB,IAArB,CAA0B,UAAAC,IAAI;AAAA,eAAEA,IAAI,CAACC,IAAL,EAAF;AAAA,OAA9B,EACCF,IADD,CACM,UAAAE,IAAI;AAAA,eAAE,MAAI,CAACP,QAAL,CAAc;AAACR,UAAAA,WAAW,EAACe,IAAI,CAAC,CAAD,CAAJ,CAAQC;AAArB,SAAd,CAAF;AAAA,OADV;AAED;;;6BAcO;AACN,aACE;AAAK,QAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAe,QAAA,YAAY,EAAE,KAAKd,sBAAlC;AAA0D,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,YAAY,EAAE,KAAKS,uBAA7B;AAAsD,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWE,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAhCeR,S;;AAmClB,eAAeK,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport CharacterList from './components/CharacterList'\nimport TeamList from './components/TeamList'\nimport Nav from './components/Nav'\nimport {getGryffindor} from './endpoints'\n\nclass App extends Component {\n\n  state={\n    allStudents:[],\n    teamStudents:[]\n  }\n\n  componentDidMount(){\n    fetch(getGryffindor).then(resp=>resp.json())\n    .then(json=>this.setState({allStudents:json[0].members}))\n  }\n\n  handleAllStudentsClick=(studentInfo)=>{\n    const updatedStudents = [...this.state.allStudents].filter(student=> student._id !== studentInfo._id)\n    this.setState({\n      allStudents:updatedStudents,\n      teamStudents:[studentInfo, ...this.state.teamStudents]\n    })\n  }\n\n  handleTeamStudentsClick=(studentInfo)=>{\n    console.log(studentInfo)\n  }\n\n  render(){\n    return (\n      <div id=\"character-container\">\n        <Nav />\n        <CharacterList handleToggle={this.handleAllStudentsClick} allStudents={this.state.allStudents}/>\n        <TeamList handleToggle={this.handleTeamStudentsClick} teamStudents={this.state.teamStudents}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}